{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "8acd2738-93b6-4ad7-8c85-c919e5ef5aeb",
   "metadata": {},
   "source": [
    "# Assignment 1 — Descriptive Analysis of District-Level Structural Data (EU 2024)\n",
    "\n",
    "**Group:** Linus Wössner, Alens Laskov, Jingyang Zhao  \n",
    "**Course:** Internet & Database Technology  \n",
    "**Dataset:** Official structural indicators at district level from Statistische Ämter des Bundes und der Länder \n",
    "**File:** `data/ew24_structure_data.xlsx`\n",
    "\n",
    "## Objective\n",
    "Conduct a **thorough descriptive analysis** at the **district** level. We will quantify and visualize key structural patterns (e.g., demographics, labor market, education) and present an interpretable narrative of differences across districts.\n",
    "\n",
    "## Evaluation Criteria (what we optimize for)\n",
    "- **Completeness & executability** of the code (end-to-end, reproducible)\n",
    "- **Efficiency** (avoid unnecessary loops; leverage pandas/numpy)\n",
    "- **Robustness** (handle missingness/edge cases; clear checks)\n",
    "- **Comments & explanations** (state *why*, not only *what*)\n",
    "- **Structure of the notebook** (logical flow)\n",
    "- **Line of argumentation** (coherent story, not a plot dump)\n",
    "\n",
    "## Analysis Roadmap  \n",
    "\n",
    "Our approach is designed to move from *raw data* to a *clear and well-argued descriptive analysis*.  \n",
    "The sequence of steps reflects both best practice in data science and the specific evaluation criteria of Assignment 1 (robustness, structure, and line of argumentation).  \n",
    "\n",
    "1. **Data Understanding (Sanity Checks)**  \n",
    "   - *Rationale:* Before producing any statistics, we must first confirm what the dataset contains. This ensures we do not interpret misleading results caused by hidden issues such as incorrect data types, duplicates, or missing values.  \n",
    "   - *Story:* This step answers the question, *“Do we understand what we are analyzing?”* It builds trust in the dataset as the foundation of all later analysis.  \n",
    "\n",
    "2. **Data Preparation (Ensuring Reliability)**  \n",
    "   - *Rationale:* A dataset may look complete at first sight, but it often hides inconsistencies (percentages stored as text, inconsistent units, uneven missingness). Converting and standardizing variables creates a reliable analytical base.  \n",
    "   - *Story:* This step transforms raw input into a dataset that is both technically usable and substantively meaningful, ensuring our descriptive statistics are valid.  \n",
    "\n",
    "3. **Descriptive Analysis (Statistical Summaries & Visualizations)**  \n",
    "   - *Rationale:* Descriptive statistics quantify the distribution of each variable, while visualizations reveal patterns that tables alone may miss. Both are necessary for a thorough analysis.  \n",
    "   - *Story:* Here we shift from “data quality” to “what the data tells us.” We explore central tendencies, variation, and relationships across districts.  \n",
    "\n",
    "4. **Interpretation of Patterns (Analytical Narrative)**  \n",
    "   - *Rationale:* Numbers and charts only become valuable when interpreted. We highlight the most important structural differences across districts and examine which variables tend to move together.  \n",
    "   - *Story:* This is where descriptive analysis becomes a narrative — we move from *“what the numbers are”* to *“what they mean in context.”*  \n",
    "\n",
    "5. **Limitations & Robustness Checks**  \n",
    "   - *Rationale:* A thorough analysis acknowledges where results may be less reliable (due to missing data, proxies, or extreme values). This critical reflection ensures transparency and aligns with good statistical practice.  \n",
    "   - *Story:* This step protects us from over-claiming and shows that our conclusions are careful and robust, not naive.  \n",
    "\n",
    "6. **Conclusion (Key Takeaways)**  \n",
    "   - *Rationale:* A final synthesis condenses the analysis into a few clear, evidence-based insights. This provides closure and makes our work accessible for readers who may not follow every technical detail.  \n",
    "   - *Story:* The analysis ends with a concise answer to the guiding question: *“What do the structural data tell us about German districts ahead of the 2024 European election?”*  "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "50b204ba-d1d9-4196-a990-9960411c3e96",
   "metadata": {},
   "source": [
    "# Step 1 — Data Understanding\n",
    "\n",
    "To ensure that our descriptive analysis is both **robust and interpretable**, we first examine the dataset for structural and quality issues.  \n",
    "As the assignment requires a *thorough descriptive analysis*, this step verifies whether the raw data is suitable for statistical summaries and highlights areas that may require preparation.   "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "3c562021-8b72-4d2d-989a-115bd3d49b3b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Dataset Information:\n",
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 444 entries, 0 to 443\n",
      "Data columns (total 52 columns):\n",
      " #   Column                                                                                                                               Non-Null Count  Dtype  \n",
      "---  ------                                                                                                                               --------------  -----  \n",
      " 0   Land                                                                                                                                 441 non-null    object \n",
      " 1   District                                                                                                                             441 non-null    float64\n",
      " 2   Name                                                                                                                                 441 non-null    object \n",
      " 3   Municipalities                                                                                                                       441 non-null    float64\n",
      " 4   Area in km2                                                                                                                          442 non-null    object \n",
      " 5   Population on 31.12.2022 - Total (in 1000)                                                                                           441 non-null    float64\n",
      " 6   Population on 31.12.2022 - German (in 1000)                                                                                          441 non-null    float64\n",
      " 7   Population on 31.12.2022 - Foreigners (%)                                                                                            441 non-null    float64\n",
      " 8   Population density on 31.12.2022 (inhabitants per km2)                                                                               441 non-null    float64\n",
      " 9   Increase (+) or decrease (-) in population in 2022 - Birth balance (per 1000 inhabitants)                                            441 non-null    float64\n",
      " 10  Increase (+) or decrease (-) in population in 2022 - Migration balance (per 1000 inhabitants)                                        441 non-null    float64\n",
      " 11  Age on 31.12.2022 - under 16 years (%)                                                                                               441 non-null    float64\n",
      " 12  Age on 31.12.2022 - 16-17 years (%)                                                                                                  441 non-null    float64\n",
      " 13  Age on 31.12.2022 - 18-24 years (%)                                                                                                  441 non-null    float64\n",
      " 14  Age on 31.12.2022 - 25-34 years (%)                                                                                                  441 non-null    float64\n",
      " 15  Age on 31.12.2022 - 35-59 years (%)                                                                                                  441 non-null    float64\n",
      " 16  Age on 31.12.2022 - 60-74 years (%)                                                                                                  441 non-null    float64\n",
      " 17  Age on 31.12.2022 - 75 years and over (%)                                                                                            441 non-null    float64\n",
      " 18  Land area by type of actual use on 31.12.2021 - Settlement and traffic (%)                                                           441 non-null    float64\n",
      " 19  Land area by type of actual use on 31.12.2021 - Vegetation and water (%)                                                             441 non-null    float64\n",
      " 20  Completed dwellings in 2021 (per 1000 inhabitants)                                                                                   441 non-null    float64\n",
      " 21  Stock of dwellings on 31.12.2021 - total (per 1000 inhabitants)                                                                      441 non-null    float64\n",
      " 22  Residential space on 31.12.2021 (per dwelling)                                                                                       441 non-null    float64\n",
      " 23  Residential space on 31.12.2021 (per inhabitant)                                                                                     441 non-null    float64\n",
      " 24  Car stock on 01.01.2023 - Total cars (per 1000 inhabitants)                                                                          441 non-null    float64\n",
      " 25  Car stock on 01.01.2023 - Cars with electric or hybrid drive (%)                                                                     441 non-null    float64\n",
      " 26  Business register 2021 - Total companies (per 1000 inhabitants)                                                                      441 non-null    float64\n",
      " 27  Business register 2021 - Craft enterprises (per 1000 inhabitants)                                                                    441 non-null    float64\n",
      " 28  School graduates from vocational schools 2022 (per 1000 inhabitants)                                                                 441 non-null    object \n",
      " 29  School graduates from general education schools 2022 - total excluding external candidates (per 1000 inhabitants)                    441 non-null    float64\n",
      " 30  School graduates from general education schools 2022 - without a secondary school certificate (%)                                    441 non-null    float64\n",
      " 31  School graduates from general education schools 2022 - with a secondary school certificate (%)                                       441 non-null    float64\n",
      " 32  School graduates from general education schools 2022 - with an intermediate school certificate (%)                                   441 non-null    float64\n",
      " 33  School graduates from general education schools 2022 - with general or subject-specific higher education entrance qualification (%)  441 non-null    object \n",
      " 34  Childcare on 01.03.2023 - Children under 3 years old (care rate)                                                                     441 non-null    float64\n",
      " 35  Childcare on 01.03.2023 - Children aged 3 to under 6 years old (care rate)                                                           441 non-null    float64\n",
      " 36  Disposable income of private households in 2021 (EUR per inhabitant)                                                                 441 non-null    float64\n",
      " 37  Gross domestic product in 2021 (EUR per inhabitant)                                                                                  441 non-null    float64\n",
      " 38  Social insurance contributions as of 30.06.2023 - total (per 1000 inhabitants)                                                       441 non-null    float64\n",
      " 39  Social insurance contributions as of 30.06.2023 - Agriculture, forestry, fishing (%)                                                 441 non-null    object \n",
      " 40  Social insurance contributions as of 30.06.2023 - Manufacturing industry (%)                                                         441 non-null    object \n",
      " 41  Social insurance contributions as of 30.06.2023 - Trade, hospitality, transport (%)                                                  441 non-null    object \n",
      " 42  Social insurance contributions as of 30.06.2023 - Public and private service providers (%)                                           441 non-null    object \n",
      " 43  Social insurance contributions as of 30.06.2023 - Other service providers and \"unspecified\" (%)                                      441 non-null    float64\n",
      " 44  Recipients of benefits under SGB II in August 2023 - total (per 1000 inhabitants)                                                    441 non-null    float64\n",
      " 45  Recipients of benefits under SGB II in August 2023 - Non-working individuals in need (%)                                             441 non-null    float64\n",
      " 46  Recipients of benefits under SGB II in August 2023 - Foreigners (%)                                                                  441 non-null    float64\n",
      " 47  Unemployment rate in October 2023 - Total                                                                                            441 non-null    float64\n",
      " 48  Unemployment rate in October 2023 - Men                                                                                              441 non-null    float64\n",
      " 49  Unemployment rate in October 2023 - Women                                                                                            441 non-null    float64\n",
      " 50  Unemployment rate in October 2023 - 15 to 24 years                                                                                   441 non-null    float64\n",
      " 51  Unemployment rate in October 2023 - 55 to 64 years                                                                                   441 non-null    float64\n",
      "dtypes: float64(43), object(9)\n",
      "memory usage: 180.5+ KB\n",
      "\n",
      "First 5 rows:\n",
      "                 Land  District                    Name  Municipalities  \\\n",
      "0  Schleswig-Holstein    1001.0        Flensburg, Stadt             1.0   \n",
      "1  Schleswig-Holstein    1002.0  Kiel, Landeshauptstadt             1.0   \n",
      "2  Schleswig-Holstein    1003.0      Lübeck, Hansestadt             1.0   \n",
      "3  Schleswig-Holstein    1004.0       Neumünster, Stadt             1.0   \n",
      "4  Schleswig-Holstein    1051.0            Dithmarschen           116.0   \n",
      "\n",
      "  Area in km2  Population on 31.12.2022 - Total (in 1000)  \\\n",
      "0        56.7                                        92.6   \n",
      "1       118.7                                       247.7   \n",
      "2       214.2                                       218.1   \n",
      "3        71.7                                        79.5   \n",
      "4      1428.2                                       135.3   \n",
      "\n",
      "   Population on 31.12.2022 - German (in 1000)  \\\n",
      "0                                         75.5   \n",
      "1                                        214.1   \n",
      "2                                        190.8   \n",
      "3                                         68.3   \n",
      "4                                        124.8   \n",
      "\n",
      "   Population on 31.12.2022 - Foreigners (%)  \\\n",
      "0                                       18.5   \n",
      "1                                       13.6   \n",
      "2                                       12.5   \n",
      "3                                       14.2   \n",
      "4                                        7.8   \n",
      "\n",
      "   Population density on 31.12.2022 (inhabitants per km2)  \\\n",
      "0                                             1631.4        \n",
      "1                                             2087.8        \n",
      "2                                             1018.2        \n",
      "3                                             1109.4        \n",
      "4                                               94.7        \n",
      "\n",
      "   Increase (+) or decrease (-) in population in 2022 - Birth balance (per 1000 inhabitants)  \\\n",
      "0                                               -4.2                                           \n",
      "1                                               -2.9                                           \n",
      "2                                               -6.7                                           \n",
      "3                                               -7.1                                           \n",
      "4                                               -7.6                                           \n",
      "\n",
      "   ...  \\\n",
      "0  ...   \n",
      "1  ...   \n",
      "2  ...   \n",
      "3  ...   \n",
      "4  ...   \n",
      "\n",
      "   Social insurance contributions as of 30.06.2023 - Public and private service providers (%)  \\\n",
      "0                                               19.2                                            \n",
      "1                                               25.6                                            \n",
      "2                                               20.7                                            \n",
      "3                                               21.3                                            \n",
      "4                                               11.3                                            \n",
      "\n",
      "   Social insurance contributions as of 30.06.2023 - Other service providers and \"unspecified\" (%)  \\\n",
      "0                                               40.0                                                 \n",
      "1                                               39.8                                                 \n",
      "2                                               32.5                                                 \n",
      "3                                               26.6                                                 \n",
      "4                                               32.3                                                 \n",
      "\n",
      "   Recipients of benefits under SGB II in August 2023 - total (per 1000 inhabitants)  \\\n",
      "0                                              115.1                                   \n",
      "1                                              120.5                                   \n",
      "2                                              104.9                                   \n",
      "3                                              112.0                                   \n",
      "4                                               74.6                                   \n",
      "\n",
      "   Recipients of benefits under SGB II in August 2023 - Non-working individuals in need (%)  \\\n",
      "0                                               25.3                                          \n",
      "1                                               26.1                                          \n",
      "2                                               25.7                                          \n",
      "3                                               26.3                                          \n",
      "4                                               26.9                                          \n",
      "\n",
      "   Recipients of benefits under SGB II in August 2023 - Foreigners (%)  \\\n",
      "0                                               37.9                     \n",
      "1                                               41.0                     \n",
      "2                                               35.9                     \n",
      "3                                               35.6                     \n",
      "4                                               35.2                     \n",
      "\n",
      "   Unemployment rate in October 2023 - Total  \\\n",
      "0                                        7.8   \n",
      "1                                        7.5   \n",
      "2                                        7.6   \n",
      "3                                        8.2   \n",
      "4                                        5.5   \n",
      "\n",
      "   Unemployment rate in October 2023 - Men  \\\n",
      "0                                      8.4   \n",
      "1                                      7.9   \n",
      "2                                      8.1   \n",
      "3                                      8.4   \n",
      "4                                      5.8   \n",
      "\n",
      "   Unemployment rate in October 2023 - Women  \\\n",
      "0                                        7.0   \n",
      "1                                        7.1   \n",
      "2                                        7.1   \n",
      "3                                        8.0   \n",
      "4                                        5.2   \n",
      "\n",
      "   Unemployment rate in October 2023 - 15 to 24 years  \\\n",
      "0                                                6.0    \n",
      "1                                                5.3    \n",
      "2                                                6.6    \n",
      "3                                                8.0    \n",
      "4                                                5.8    \n",
      "\n",
      "   Unemployment rate in October 2023 - 55 to 64 years  \n",
      "0                                                7.5   \n",
      "1                                                7.9   \n",
      "2                                                7.6   \n",
      "3                                                7.6   \n",
      "4                                                5.2   \n",
      "\n",
      "[5 rows x 52 columns]\n",
      "\n",
      "Number of duplicate rows: 1\n"
     ]
    }
   ],
   "source": [
    "# Import necessary libraries\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Load the dataset\n",
    "file_path = '/Users/linuswossner/Desktop/database/Database-and-Techbology/ew24_structure_data.xlsx'\n",
    "idt_df = pd.read_excel(file_path)\n",
    "\n",
    "# 1. Check basic dataset information\n",
    "print(\"\\nDataset Information:\")\n",
    "idt_df.info()  \n",
    "print(\"\\nFirst 5 rows:\")\n",
    "print(idt_df.head())\n",
    "\n",
    "# 2. Check for duplicate rows\n",
    "duplicates = idt_df.duplicated().sum()\n",
    "print(f\"\\nNumber of duplicate rows: {duplicates}\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3508b8e6-1a64-4512-8ec6-b2e3ed7e2dfe",
   "metadata": {},
   "source": [
    "## Step 1 — Data Understanding — Conclusion\n",
    "\n",
    "1. **Structure**  \n",
    "   - The dataset contains **444 rows** and **52 columns**.  \n",
    "   - According to the Federal Returning Officer, Germany comprises **294 rural districts (Landkreise)** and **106 urban districts (kreisfreie Städte)**, for a total of **400 administrative districts** (2024).  \n",
    "   - Since the dataset contains more rows than the official number of districts, those additional entries will need to be removed to restrict the analysis to the correct unit of analysis: the **district**.  \n",
    "\n",
    "2. **Data types**  \n",
    "   - Most variables are numeric as expected, but 9 appear as `object` despite some containing numeric information (e.g., `Area in km2`).  \n",
    "   - These variables will need to be converted into proper numeric formats in the preparation step to allow statistical analysis.  \n",
    "\n",
    "3. **Missingness**  \n",
    "   - All variables appear to be missing 3 values (i.e., 441 non-Null).  \n",
    "   - Further analysis is required to determine whether missingness is systematic (the same rows across multiple variables) or random.  \n",
    "\n",
    "4. **Duplicates**  \n",
    "   - *1* duplicate rows was found.  \n",
    "   - We need to check whether these represent data entry errors or legitimate repeated values.  \n",
    "\n",
    "**Conclusion:**  \n",
    "The dataset is structurally sound for descriptive analysis at the district level, but rows outside the official set of 400 districts and those variables stored as objects that should be numeric will need to be addressed in the preparation step. This ensures our analysis is both robust and restricted to the appropriate unit of analysis.\n",
    "\n",
    "**Note on Data Reliability:**  \n",
    "The dataset is considered reliable as it originates from the *Statistische Ämter des Bundes und der Länder* (Germany’s official statistical offices).  \n",
    "As part of the European Statistical System (ESS), this data falls under the **European Statistics Code of Practice** (Eurostat, 2017), which ensures that official statistics meet high standards of accuracy, comparability, and quality assurance.  \n",
    "While our own checks are still necessary to confirm consistency and interpretability, this institutional framework provides an additional layer of trust in the dataset.\n",
    "\n",
    "Having completed these sanity checks, we can now move on to **Step - 2 Data Preparation**, where we will address issues such as removing non-district rows, handling missing values, and converting data types to prepare the dataset for descriptive analysis."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2a4b51f3-ea26-4f02-9267-d0d1c0e101e6",
   "metadata": {},
   "source": [
    "# Step 2 — Data Preparation\n",
    "\n",
    "The purpose of this step is to transform the raw dataset into a format suitable for descriptive analysis at the district level, in line with the assignment requirements.  \n",
    "Although the dataset originates from an official and reliable source, our initial sanity checks revealed structural issues that must be resolved before any statistics can be computed.  \n",
    "\n",
    "In particular, the dataset currently contains more than the official number of districts in Germany.  \n",
    "Before any cleaning or transformation can be applied, the dataset must therefore be reduced to exactly these 400 districts.  \n",
    "This step ensures that the subsequent analysis is based on the correct unit of observation.  \n",
    "\n",
    "The key preparation tasks are as follows:  \n",
    "\n",
    "1. **Restricting the dataset to districts**  \n",
    "   - Remove rows that do not represent individual districts (e.g., `\"Deutschland\"` totals or other non-district entries).  \n",
    "   - This reduction guarantees that the dataset is aligned with the official count of 400 districts.  \n",
    "\n",
    "2. **Data type corrections**  \n",
    "   - Convert variables currently stored as `object` into numeric types where appropriate.  \n",
    "   - Ensure categorical variables such as `Land` remain categorical for grouping and comparison.  \n",
    "\n",
    "3. **Standardizing percentage-like variables**  \n",
    "   - Ensure all percentage variables are expressed on a uniform scale (0–100) to allow meaningful comparison across districts. "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ba4db50e-620e-469c-b448-afd83b7d3229",
   "metadata": {},
   "source": [
    "## 2.1 Restricting the dataset to districts"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "fa020a82-640e-4cb4-a5fd-e4bf0a351509",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Distribution of District name lengths:\n",
      "district_length\n",
      "3     25\n",
      "4     19\n",
      "6    318\n",
      "7     82\n",
      "Name: count, dtype: int64\n",
      "\n",
      "Mean length: 5.93\n",
      "Median length: 6.0\n",
      "Most common length: 6\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Number of rows with unusual District lengths: 25\n",
      "\n",
      "Sample of rows with unusual District lengths:\n",
      "     District  district_length\n",
      "15        1.0                3\n",
      "16        1.0                3\n",
      "17        1.0                3\n",
      "64        3.0                3\n",
      "65        3.0                3\n",
      "66        3.0                3\n",
      "69        4.0                3\n",
      "123       5.0                3\n",
      "124       5.0                3\n",
      "125       5.0                3\n"
     ]
    }
   ],
   "source": [
    "# Analyze the length of values in the 'District' column\n",
    "if 'District' in idt_df.columns:\n",
    "    # Create a new column with the length of each District value\n",
    "    idt_df['district_length'] = idt_df['District'].astype(str).apply(len)\n",
    "    \n",
    "    # Get the distribution of lengths\n",
    "    length_counts = idt_df['district_length'].value_counts().sort_index()\n",
    "    \n",
    "    print(\"\\nDistribution of District name lengths:\")\n",
    "    print(length_counts)\n",
    "    \n",
    "    # Calculate statistics\n",
    "    mean_length = idt_df['district_length'].mean()\n",
    "    median_length = idt_df['district_length'].median()\n",
    "    mode_length = idt_df['district_length'].mode()[0]\n",
    "    \n",
    "    print(f\"\\nMean length: {mean_length:.2f}\")\n",
    "    print(f\"Median length: {median_length}\")\n",
    "    print(f\"Most common length: {mode_length}\")\n",
    "    \n",
    "    # Visualize the distribution\n",
    "    plt.figure(figsize=(10, 6))\n",
    "    plt.bar(length_counts.index, length_counts.values)\n",
    "    plt.xlabel('Length of District Name')\n",
    "    plt.ylabel('Count')\n",
    "    plt.title('Distribution of District Name Lengths')\n",
    "    plt.grid(axis='y', alpha=0.3)\n",
    "    plt.show()\n",
    "    \n",
    "    # Identify rows with unusual lengths (you can adjust the threshold)\n",
    "    # Let's say we consider lengths that differ from the mode by more than 2 as unusual\n",
    "    unusual_length_threshold = 2\n",
    "    unusual_lengths = idt_df[abs(idt_df['district_length'] - mode_length) > unusual_length_threshold]\n",
    "    \n",
    "    print(f\"\\nNumber of rows with unusual District lengths: {len(unusual_lengths)}\")\n",
    "    \n",
    "    if len(unusual_lengths) > 0:\n",
    "        print(\"\\nSample of rows with unusual District lengths:\")\n",
    "        print(unusual_lengths[['District', 'district_length']].head(10))\n",
    "        \n",
    "        # Code to drop these rows (commented out - uncomment when ready to use)\n",
    "        # normal_length_df = idt_df[abs(idt_df['district_length'] - mode_length) <= unusual_length_threshold]\n",
    "        # print(f\"\\nRemaining rows after dropping unusual lengths: {len(normal_length_df)}\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "1a96fed5-d07e-4768-8069-434da58afb97",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Investigating District values with lengths (3, 4, 6, and 7):\n",
      "Total rows with these lengths: 444\n",
      "\n",
      "Districts with length 3 (25 rows):\n",
      "  '1.0' - appears 3 times\n",
      "  '3.0' - appears 3 times\n",
      "  ... and 7 more unique district values\n",
      "\n",
      "Districts with length 4 (19 rows):\n",
      "  '10.0' - appears 1 times\n",
      "  '12.0' - appears 3 times\n",
      "  ... and 5 more unique district values\n",
      "\n",
      "Districts with length 6 (318 rows):\n",
      "  '1001.0' - appears 1 times\n",
      "  '1002.0' - appears 1 times\n",
      "  ... and 316 more unique district values\n",
      "\n",
      "Districts with length 7 (82 rows):\n",
      "  '10041.0' - appears 1 times\n",
      "  '10042.0' - appears 1 times\n",
      "  ... and 80 more unique district values\n",
      "\n",
      "Sample rows with different District lengths:\n",
      "\n",
      "Sample rows with District length 3:\n",
      "    District                Land                                  Name  \\\n",
      "15       1.0  Schleswig-Holstein               Schleswig-Holstein Land   \n",
      "16       1.0  Schleswig-Holstein  Schleswig-Holstein kreisfreie Städte   \n",
      "17       1.0  Schleswig-Holstein             Schleswig-Holstein Kreise   \n",
      "\n",
      "    Municipalities Area in km2  \n",
      "15          1104.0     15804.3  \n",
      "16             4.0       461.2  \n",
      "17          1100.0     15343.1  \n",
      "\n",
      "Sample rows with District length 4:\n",
      "     District         Land                           Name  Municipalities  \\\n",
      "346      10.0     Saarland                  Saarland Land            52.0   \n",
      "366      12.0  Brandenburg               Brandenburg Land           413.0   \n",
      "367      12.0  Brandenburg  Brandenburg kreisfreie Städte             4.0   \n",
      "\n",
      "    Area in km2  \n",
      "346      2571.5  \n",
      "366     29654.4  \n",
      "367       731.4  \n",
      "\n",
      "Sample rows with District length 6:\n",
      "   District                Land                    Name  Municipalities  \\\n",
      "0    1001.0  Schleswig-Holstein        Flensburg, Stadt             1.0   \n",
      "1    1002.0  Schleswig-Holstein  Kiel, Landeshauptstadt             1.0   \n",
      "2    1003.0  Schleswig-Holstein      Lübeck, Hansestadt             1.0   \n",
      "\n",
      "  Area in km2  \n",
      "0        56.7  \n",
      "1       118.7  \n",
      "2       214.2  \n",
      "\n",
      "Sample rows with District length 7:\n",
      "     District      Land                         Name  Municipalities  \\\n",
      "340   10041.0  Saarland  Regionalverband Saarbrücken            10.0   \n",
      "341   10042.0  Saarland                Merzig-Wadern             7.0   \n",
      "342   10043.0  Saarland                  Neunkirchen             7.0   \n",
      "\n",
      "    Area in km2  \n",
      "340         411  \n",
      "341       556.7  \n",
      "342       249.8  \n"
     ]
    }
   ],
   "source": [
    "# Investigate various lengths\n",
    "lengths_to_investigate = [3, 4, 6, 7]\n",
    "\n",
    "# Filter for the specific lengths we want to investigate\n",
    "districts_by_length = idt_df[idt_df['district_length'].isin(lengths_to_investigate)]\n",
    "\n",
    "print(f\"\\nInvestigating District values with lengths (3, 4, 6, and 7):\")\n",
    "print(f\"Total rows with these lengths: {len(districts_by_length)}\")\n",
    "\n",
    "# Group by length and show the unique values for each length (limited to 2 examples)\n",
    "for length in lengths_to_investigate:\n",
    "    districts_with_length = idt_df[idt_df['district_length'] == length]\n",
    "    unique_districts = districts_with_length['District'].unique()\n",
    "    \n",
    "    print(f\"\\nDistricts with length {length} ({len(districts_with_length)} rows):\")\n",
    "    # Show only the first 2 unique districts for each length\n",
    "    for district in unique_districts[:2]:\n",
    "        count = districts_with_length[districts_with_length['District'] == district].shape[0]\n",
    "        print(f\"  '{district}' - appears {count} times\")\n",
    "    \n",
    "    # If there are more than 2 unique districts, indicate there are more\n",
    "    if len(unique_districts) > 2:\n",
    "        print(f\"  ... and {len(unique_districts) - 2} more unique district values\")\n",
    "\n",
    "# Show 3 complete rows for each length for context\n",
    "print(\"\\nSample rows with different District lengths:\")\n",
    "for length in lengths_to_investigate:\n",
    "    sample = idt_df[idt_df['district_length'] == length].head(3)\n",
    "    if not sample.empty:\n",
    "        print(f\"\\nSample rows with District length {length}:\")\n",
    "        print(sample[['District'] + [col for col in sample.columns[:5] if col != 'District']])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ab8840ae-40e9-4372-810e-7b6393cb6556",
   "metadata": {},
   "source": [
    "To ensure that our analysis is restricted to valid districts, we examined the length of the district identifiers.  \n",
    "Rows with identifiers shorter than 6 characters do not correspond to official districts and were therefore removed.  \n",
    "For the assignment, we retain only those districts with identifiers of **6 or 7 characters in length**, which together account for the official total of 400 districts.  \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "41d163ca-3cac-492f-8cd5-0629d9a4b2d7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Original DataFrame: 444 rows\n",
      "Filtered DataFrame: 400 rows\n",
      "Removed 44 rows with District length < 6\n",
      "\n",
      "District length distribution in district-only DataFrame:\n",
      "district_length\n",
      "6    318\n",
      "7     82\n",
      "Name: count, dtype: int64\n",
      "\n",
      "Sample of filtered DataFrame:\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Land</th>\n",
       "      <th>District</th>\n",
       "      <th>Name</th>\n",
       "      <th>Municipalities</th>\n",
       "      <th>Area in km2</th>\n",
       "      <th>Population on 31.12.2022 - Total (in 1000)</th>\n",
       "      <th>Population on 31.12.2022 - German (in 1000)</th>\n",
       "      <th>Population on 31.12.2022 - Foreigners (%)</th>\n",
       "      <th>Population density on 31.12.2022 (inhabitants per km2)</th>\n",
       "      <th>Increase (+) or decrease (-) in population in 2022 - Birth balance (per 1000 inhabitants)</th>\n",
       "      <th>...</th>\n",
       "      <th>Social insurance contributions as of 30.06.2023 - Other service providers and \"unspecified\" (%)</th>\n",
       "      <th>Recipients of benefits under SGB II in August 2023 - total (per 1000 inhabitants)</th>\n",
       "      <th>Recipients of benefits under SGB II in August 2023 - Non-working individuals in need (%)</th>\n",
       "      <th>Recipients of benefits under SGB II in August 2023 - Foreigners (%)</th>\n",
       "      <th>Unemployment rate in October 2023 - Total</th>\n",
       "      <th>Unemployment rate in October 2023 - Men</th>\n",
       "      <th>Unemployment rate in October 2023 - Women</th>\n",
       "      <th>Unemployment rate in October 2023 - 15 to 24 years</th>\n",
       "      <th>Unemployment rate in October 2023 - 55 to 64 years</th>\n",
       "      <th>district_length</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Schleswig-Holstein</td>\n",
       "      <td>1001.0</td>\n",
       "      <td>Flensburg, Stadt</td>\n",
       "      <td>1.0</td>\n",
       "      <td>56.7</td>\n",
       "      <td>92.6</td>\n",
       "      <td>75.5</td>\n",
       "      <td>18.5</td>\n",
       "      <td>1631.4</td>\n",
       "      <td>-4.2</td>\n",
       "      <td>...</td>\n",
       "      <td>40.0</td>\n",
       "      <td>115.1</td>\n",
       "      <td>25.3</td>\n",
       "      <td>37.9</td>\n",
       "      <td>7.8</td>\n",
       "      <td>8.4</td>\n",
       "      <td>7.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>7.5</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Schleswig-Holstein</td>\n",
       "      <td>1002.0</td>\n",
       "      <td>Kiel, Landeshauptstadt</td>\n",
       "      <td>1.0</td>\n",
       "      <td>118.7</td>\n",
       "      <td>247.7</td>\n",
       "      <td>214.1</td>\n",
       "      <td>13.6</td>\n",
       "      <td>2087.8</td>\n",
       "      <td>-2.9</td>\n",
       "      <td>...</td>\n",
       "      <td>39.8</td>\n",
       "      <td>120.5</td>\n",
       "      <td>26.1</td>\n",
       "      <td>41.0</td>\n",
       "      <td>7.5</td>\n",
       "      <td>7.9</td>\n",
       "      <td>7.1</td>\n",
       "      <td>5.3</td>\n",
       "      <td>7.9</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Schleswig-Holstein</td>\n",
       "      <td>1003.0</td>\n",
       "      <td>Lübeck, Hansestadt</td>\n",
       "      <td>1.0</td>\n",
       "      <td>214.2</td>\n",
       "      <td>218.1</td>\n",
       "      <td>190.8</td>\n",
       "      <td>12.5</td>\n",
       "      <td>1018.2</td>\n",
       "      <td>-6.7</td>\n",
       "      <td>...</td>\n",
       "      <td>32.5</td>\n",
       "      <td>104.9</td>\n",
       "      <td>25.7</td>\n",
       "      <td>35.9</td>\n",
       "      <td>7.6</td>\n",
       "      <td>8.1</td>\n",
       "      <td>7.1</td>\n",
       "      <td>6.6</td>\n",
       "      <td>7.6</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Schleswig-Holstein</td>\n",
       "      <td>1004.0</td>\n",
       "      <td>Neumünster, Stadt</td>\n",
       "      <td>1.0</td>\n",
       "      <td>71.7</td>\n",
       "      <td>79.5</td>\n",
       "      <td>68.3</td>\n",
       "      <td>14.2</td>\n",
       "      <td>1109.4</td>\n",
       "      <td>-7.1</td>\n",
       "      <td>...</td>\n",
       "      <td>26.6</td>\n",
       "      <td>112.0</td>\n",
       "      <td>26.3</td>\n",
       "      <td>35.6</td>\n",
       "      <td>8.2</td>\n",
       "      <td>8.4</td>\n",
       "      <td>8.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>7.6</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Schleswig-Holstein</td>\n",
       "      <td>1051.0</td>\n",
       "      <td>Dithmarschen</td>\n",
       "      <td>116.0</td>\n",
       "      <td>1428.2</td>\n",
       "      <td>135.3</td>\n",
       "      <td>124.8</td>\n",
       "      <td>7.8</td>\n",
       "      <td>94.7</td>\n",
       "      <td>-7.6</td>\n",
       "      <td>...</td>\n",
       "      <td>32.3</td>\n",
       "      <td>74.6</td>\n",
       "      <td>26.9</td>\n",
       "      <td>35.2</td>\n",
       "      <td>5.5</td>\n",
       "      <td>5.8</td>\n",
       "      <td>5.2</td>\n",
       "      <td>5.8</td>\n",
       "      <td>5.2</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 53 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                 Land  District                    Name  Municipalities  \\\n",
       "0  Schleswig-Holstein    1001.0        Flensburg, Stadt             1.0   \n",
       "1  Schleswig-Holstein    1002.0  Kiel, Landeshauptstadt             1.0   \n",
       "2  Schleswig-Holstein    1003.0      Lübeck, Hansestadt             1.0   \n",
       "3  Schleswig-Holstein    1004.0       Neumünster, Stadt             1.0   \n",
       "4  Schleswig-Holstein    1051.0            Dithmarschen           116.0   \n",
       "\n",
       "  Area in km2  Population on 31.12.2022 - Total (in 1000)  \\\n",
       "0        56.7                                        92.6   \n",
       "1       118.7                                       247.7   \n",
       "2       214.2                                       218.1   \n",
       "3        71.7                                        79.5   \n",
       "4      1428.2                                       135.3   \n",
       "\n",
       "   Population on 31.12.2022 - German (in 1000)  \\\n",
       "0                                         75.5   \n",
       "1                                        214.1   \n",
       "2                                        190.8   \n",
       "3                                         68.3   \n",
       "4                                        124.8   \n",
       "\n",
       "   Population on 31.12.2022 - Foreigners (%)  \\\n",
       "0                                       18.5   \n",
       "1                                       13.6   \n",
       "2                                       12.5   \n",
       "3                                       14.2   \n",
       "4                                        7.8   \n",
       "\n",
       "   Population density on 31.12.2022 (inhabitants per km2)  \\\n",
       "0                                             1631.4        \n",
       "1                                             2087.8        \n",
       "2                                             1018.2        \n",
       "3                                             1109.4        \n",
       "4                                               94.7        \n",
       "\n",
       "   Increase (+) or decrease (-) in population in 2022 - Birth balance (per 1000 inhabitants)  \\\n",
       "0                                               -4.2                                           \n",
       "1                                               -2.9                                           \n",
       "2                                               -6.7                                           \n",
       "3                                               -7.1                                           \n",
       "4                                               -7.6                                           \n",
       "\n",
       "   ...  \\\n",
       "0  ...   \n",
       "1  ...   \n",
       "2  ...   \n",
       "3  ...   \n",
       "4  ...   \n",
       "\n",
       "   Social insurance contributions as of 30.06.2023 - Other service providers and \"unspecified\" (%)  \\\n",
       "0                                               40.0                                                 \n",
       "1                                               39.8                                                 \n",
       "2                                               32.5                                                 \n",
       "3                                               26.6                                                 \n",
       "4                                               32.3                                                 \n",
       "\n",
       "   Recipients of benefits under SGB II in August 2023 - total (per 1000 inhabitants)  \\\n",
       "0                                              115.1                                   \n",
       "1                                              120.5                                   \n",
       "2                                              104.9                                   \n",
       "3                                              112.0                                   \n",
       "4                                               74.6                                   \n",
       "\n",
       "   Recipients of benefits under SGB II in August 2023 - Non-working individuals in need (%)  \\\n",
       "0                                               25.3                                          \n",
       "1                                               26.1                                          \n",
       "2                                               25.7                                          \n",
       "3                                               26.3                                          \n",
       "4                                               26.9                                          \n",
       "\n",
       "   Recipients of benefits under SGB II in August 2023 - Foreigners (%)  \\\n",
       "0                                               37.9                     \n",
       "1                                               41.0                     \n",
       "2                                               35.9                     \n",
       "3                                               35.6                     \n",
       "4                                               35.2                     \n",
       "\n",
       "   Unemployment rate in October 2023 - Total  \\\n",
       "0                                        7.8   \n",
       "1                                        7.5   \n",
       "2                                        7.6   \n",
       "3                                        8.2   \n",
       "4                                        5.5   \n",
       "\n",
       "   Unemployment rate in October 2023 - Men  \\\n",
       "0                                      8.4   \n",
       "1                                      7.9   \n",
       "2                                      8.1   \n",
       "3                                      8.4   \n",
       "4                                      5.8   \n",
       "\n",
       "   Unemployment rate in October 2023 - Women  \\\n",
       "0                                        7.0   \n",
       "1                                        7.1   \n",
       "2                                        7.1   \n",
       "3                                        8.0   \n",
       "4                                        5.2   \n",
       "\n",
       "   Unemployment rate in October 2023 - 15 to 24 years  \\\n",
       "0                                                6.0    \n",
       "1                                                5.3    \n",
       "2                                                6.6    \n",
       "3                                                8.0    \n",
       "4                                                5.8    \n",
       "\n",
       "   Unemployment rate in October 2023 - 55 to 64 years  district_length  \n",
       "0                                                7.5                 6  \n",
       "1                                                7.9                 6  \n",
       "2                                                7.6                 6  \n",
       "3                                                7.6                 6  \n",
       "4                                                5.2                 6  \n",
       "\n",
       "[5 rows x 53 columns]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Remove rows with District length shorter than 6\n",
    "dist_df = idt_df[idt_df['district_length'] >= 6].copy()\n",
    "\n",
    "# Print summary of the filtering\n",
    "print(f\"Original DataFrame: {len(idt_df)} rows\")\n",
    "print(f\"Filtered DataFrame: {len(dist_df)} rows\")\n",
    "print(f\"Removed {len(idt_df) - len(dist_df)} rows with District length < 6\")\n",
    "\n",
    "# Check the distribution of district lengths in the filtered DataFrame\n",
    "length_counts = dist_df['district_length'].value_counts().sort_index()\n",
    "print(\"\\nDistrict length distribution in district-only DataFrame:\")\n",
    "print(length_counts)\n",
    "\n",
    "# Optional: Reset the index of the new DataFrame\n",
    "dist_df.reset_index(drop=True, inplace=True)\n",
    "\n",
    "# Display a sample of the filtered DataFrame\n",
    "print(\"\\nSample of filtered DataFrame:\")\n",
    "display(dist_df.head())"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d25d1ee0-588c-44c7-a24b-ffd5b6076107",
   "metadata": {},
   "source": [
    "## 2.2 Data type corrections\n",
    "The next step in the preparation process is to convert variables that are currently stored as `object` into proper numeric formats.  \n",
    "Although these variables contain numeric information, they are not usable for calculations until transformed into numeric types.  \n",
    "Once the conversions are completed, we will re-check the dataset for **missing values** and **duplicates** to ensure that the data is consistent and ready for descriptive analysis.  \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "d6728ba2-d837-4bef-afc2-aa8760515e23",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Converting the following columns to numeric (float):\n",
      "Index 4: Area in km2\n",
      "Index 28: School graduates from vocational schools 2022 (per 1000 inhabitants)\n",
      "Index 33: School graduates from general education schools 2022 - with general or subject-specific higher education entrance qualification (%)\n",
      "Index 39: Social insurance contributions as of 30.06.2023 - Agriculture, forestry, fishing (%)\n",
      "Index 40: Social insurance contributions as of 30.06.2023 - Manufacturing industry (%)\n",
      "Index 41: Social insurance contributions as of 30.06.2023 - Trade, hospitality, transport (%)\n",
      "Index 42: Social insurance contributions as of 30.06.2023 - Public and private service providers (%)\n",
      "Converted 'Area in km2' from float64 to float64 (0 NaN values)\n",
      "Converted 'School graduates from vocational schools 2022 (per 1000 inhabitants)' from float64 to float64 (5 NaN values)\n",
      "Converted 'School graduates from general education schools 2022 - with general or subject-specific higher education entrance qualification (%)' from float64 to float64 (2 NaN values)\n",
      "Converted 'Social insurance contributions as of 30.06.2023 - Agriculture, forestry, fishing (%)' from float64 to float64 (20 NaN values)\n",
      "Converted 'Social insurance contributions as of 30.06.2023 - Manufacturing industry (%)' from float64 to float64 (10 NaN values)\n",
      "Converted 'Social insurance contributions as of 30.06.2023 - Trade, hospitality, transport (%)' from float64 to float64 (2 NaN values)\n",
      "Converted 'Social insurance contributions as of 30.06.2023 - Public and private service providers (%)' from float64 to float64 (8 NaN values)\n",
      "\n",
      "Removing 'district_length' column...\n",
      "'district_length' column removed successfully\n",
      "\n",
      "DataFrame summary after modifications:\n",
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 400 entries, 0 to 399\n",
      "Data columns (total 52 columns):\n",
      " #   Column                                                                                                                               Non-Null Count  Dtype  \n",
      "---  ------                                                                                                                               --------------  -----  \n",
      " 0   Land                                                                                                                                 400 non-null    object \n",
      " 1   District                                                                                                                             400 non-null    float64\n",
      " 2   Name                                                                                                                                 400 non-null    object \n",
      " 3   Municipalities                                                                                                                       400 non-null    float64\n",
      " 4   Area in km2                                                                                                                          400 non-null    float64\n",
      " 5   Population on 31.12.2022 - Total (in 1000)                                                                                           400 non-null    float64\n",
      " 6   Population on 31.12.2022 - German (in 1000)                                                                                          400 non-null    float64\n",
      " 7   Population on 31.12.2022 - Foreigners (%)                                                                                            400 non-null    float64\n",
      " 8   Population density on 31.12.2022 (inhabitants per km2)                                                                               400 non-null    float64\n",
      " 9   Increase (+) or decrease (-) in population in 2022 - Birth balance (per 1000 inhabitants)                                            400 non-null    float64\n",
      " 10  Increase (+) or decrease (-) in population in 2022 - Migration balance (per 1000 inhabitants)                                        400 non-null    float64\n",
      " 11  Age on 31.12.2022 - under 16 years (%)                                                                                               400 non-null    float64\n",
      " 12  Age on 31.12.2022 - 16-17 years (%)                                                                                                  400 non-null    float64\n",
      " 13  Age on 31.12.2022 - 18-24 years (%)                                                                                                  400 non-null    float64\n",
      " 14  Age on 31.12.2022 - 25-34 years (%)                                                                                                  400 non-null    float64\n",
      " 15  Age on 31.12.2022 - 35-59 years (%)                                                                                                  400 non-null    float64\n",
      " 16  Age on 31.12.2022 - 60-74 years (%)                                                                                                  400 non-null    float64\n",
      " 17  Age on 31.12.2022 - 75 years and over (%)                                                                                            400 non-null    float64\n",
      " 18  Land area by type of actual use on 31.12.2021 - Settlement and traffic (%)                                                           400 non-null    float64\n",
      " 19  Land area by type of actual use on 31.12.2021 - Vegetation and water (%)                                                             400 non-null    float64\n",
      " 20  Completed dwellings in 2021 (per 1000 inhabitants)                                                                                   400 non-null    float64\n",
      " 21  Stock of dwellings on 31.12.2021 - total (per 1000 inhabitants)                                                                      400 non-null    float64\n",
      " 22  Residential space on 31.12.2021 (per dwelling)                                                                                       400 non-null    float64\n",
      " 23  Residential space on 31.12.2021 (per inhabitant)                                                                                     400 non-null    float64\n",
      " 24  Car stock on 01.01.2023 - Total cars (per 1000 inhabitants)                                                                          400 non-null    float64\n",
      " 25  Car stock on 01.01.2023 - Cars with electric or hybrid drive (%)                                                                     400 non-null    float64\n",
      " 26  Business register 2021 - Total companies (per 1000 inhabitants)                                                                      400 non-null    float64\n",
      " 27  Business register 2021 - Craft enterprises (per 1000 inhabitants)                                                                    400 non-null    float64\n",
      " 28  School graduates from vocational schools 2022 (per 1000 inhabitants)                                                                 395 non-null    float64\n",
      " 29  School graduates from general education schools 2022 - total excluding external candidates (per 1000 inhabitants)                    400 non-null    float64\n",
      " 30  School graduates from general education schools 2022 - without a secondary school certificate (%)                                    400 non-null    float64\n",
      " 31  School graduates from general education schools 2022 - with a secondary school certificate (%)                                       400 non-null    float64\n",
      " 32  School graduates from general education schools 2022 - with an intermediate school certificate (%)                                   400 non-null    float64\n",
      " 33  School graduates from general education schools 2022 - with general or subject-specific higher education entrance qualification (%)  398 non-null    float64\n",
      " 34  Childcare on 01.03.2023 - Children under 3 years old (care rate)                                                                     400 non-null    float64\n",
      " 35  Childcare on 01.03.2023 - Children aged 3 to under 6 years old (care rate)                                                           400 non-null    float64\n",
      " 36  Disposable income of private households in 2021 (EUR per inhabitant)                                                                 400 non-null    float64\n",
      " 37  Gross domestic product in 2021 (EUR per inhabitant)                                                                                  400 non-null    float64\n",
      " 38  Social insurance contributions as of 30.06.2023 - total (per 1000 inhabitants)                                                       400 non-null    float64\n",
      " 39  Social insurance contributions as of 30.06.2023 - Agriculture, forestry, fishing (%)                                                 380 non-null    float64\n",
      " 40  Social insurance contributions as of 30.06.2023 - Manufacturing industry (%)                                                         390 non-null    float64\n",
      " 41  Social insurance contributions as of 30.06.2023 - Trade, hospitality, transport (%)                                                  398 non-null    float64\n",
      " 42  Social insurance contributions as of 30.06.2023 - Public and private service providers (%)                                           392 non-null    float64\n",
      " 43  Social insurance contributions as of 30.06.2023 - Other service providers and \"unspecified\" (%)                                      400 non-null    float64\n",
      " 44  Recipients of benefits under SGB II in August 2023 - total (per 1000 inhabitants)                                                    400 non-null    float64\n",
      " 45  Recipients of benefits under SGB II in August 2023 - Non-working individuals in need (%)                                             400 non-null    float64\n",
      " 46  Recipients of benefits under SGB II in August 2023 - Foreigners (%)                                                                  400 non-null    float64\n",
      " 47  Unemployment rate in October 2023 - Total                                                                                            400 non-null    float64\n",
      " 48  Unemployment rate in October 2023 - Men                                                                                              400 non-null    float64\n",
      " 49  Unemployment rate in October 2023 - Women                                                                                            400 non-null    float64\n",
      " 50  Unemployment rate in October 2023 - 15 to 24 years                                                                                   400 non-null    float64\n",
      " 51  Unemployment rate in October 2023 - 55 to 64 years                                                                                   400 non-null    float64\n",
      "dtypes: float64(50), object(2)\n",
      "memory usage: 162.6+ KB\n",
      "None\n",
      "\n",
      "Sample of DataFrame with converted columns:\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Area in km2</th>\n",
       "      <th>School graduates from vocational schools 2022 (per 1000 inhabitants)</th>\n",
       "      <th>School graduates from general education schools 2022 - with general or subject-specific higher education entrance qualification (%)</th>\n",
       "      <th>Social insurance contributions as of 30.06.2023 - Agriculture, forestry, fishing (%)</th>\n",
       "      <th>Social insurance contributions as of 30.06.2023 - Manufacturing industry (%)</th>\n",
       "      <th>Social insurance contributions as of 30.06.2023 - Trade, hospitality, transport (%)</th>\n",
       "      <th>Social insurance contributions as of 30.06.2023 - Public and private service providers (%)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>56.7</td>\n",
       "      <td>8.0</td>\n",
       "      <td>43.9</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>25.4</td>\n",
       "      <td>19.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>118.7</td>\n",
       "      <td>5.6</td>\n",
       "      <td>44.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>19.1</td>\n",
       "      <td>25.6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>214.2</td>\n",
       "      <td>4.0</td>\n",
       "      <td>39.0</td>\n",
       "      <td>0.1</td>\n",
       "      <td>23.6</td>\n",
       "      <td>23.1</td>\n",
       "      <td>20.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>71.7</td>\n",
       "      <td>7.8</td>\n",
       "      <td>43.3</td>\n",
       "      <td>0.8</td>\n",
       "      <td>19.8</td>\n",
       "      <td>31.5</td>\n",
       "      <td>21.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1428.2</td>\n",
       "      <td>2.2</td>\n",
       "      <td>28.4</td>\n",
       "      <td>4.1</td>\n",
       "      <td>24.8</td>\n",
       "      <td>27.5</td>\n",
       "      <td>11.3</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Area in km2  \\\n",
       "0         56.7   \n",
       "1        118.7   \n",
       "2        214.2   \n",
       "3         71.7   \n",
       "4       1428.2   \n",
       "\n",
       "   School graduates from vocational schools 2022 (per 1000 inhabitants)  \\\n",
       "0                                                8.0                      \n",
       "1                                                5.6                      \n",
       "2                                                4.0                      \n",
       "3                                                7.8                      \n",
       "4                                                2.2                      \n",
       "\n",
       "   School graduates from general education schools 2022 - with general or subject-specific higher education entrance qualification (%)  \\\n",
       "0                                               43.9                                                                                     \n",
       "1                                               44.0                                                                                     \n",
       "2                                               39.0                                                                                     \n",
       "3                                               43.3                                                                                     \n",
       "4                                               28.4                                                                                     \n",
       "\n",
       "   Social insurance contributions as of 30.06.2023 - Agriculture, forestry, fishing (%)  \\\n",
       "0                                                NaN                                      \n",
       "1                                                NaN                                      \n",
       "2                                                0.1                                      \n",
       "3                                                0.8                                      \n",
       "4                                                4.1                                      \n",
       "\n",
       "   Social insurance contributions as of 30.06.2023 - Manufacturing industry (%)  \\\n",
       "0                                                NaN                              \n",
       "1                                                NaN                              \n",
       "2                                               23.6                              \n",
       "3                                               19.8                              \n",
       "4                                               24.8                              \n",
       "\n",
       "   Social insurance contributions as of 30.06.2023 - Trade, hospitality, transport (%)  \\\n",
       "0                                               25.4                                     \n",
       "1                                               19.1                                     \n",
       "2                                               23.1                                     \n",
       "3                                               31.5                                     \n",
       "4                                               27.5                                     \n",
       "\n",
       "   Social insurance contributions as of 30.06.2023 - Public and private service providers (%)  \n",
       "0                                               19.2                                           \n",
       "1                                               25.6                                           \n",
       "2                                               20.7                                           \n",
       "3                                               21.3                                           \n",
       "4                                               11.3                                           "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "738cd237-9336-4f74-b377-f4ed12622b8a",
   "metadata": {},
   "source": [
    "After converting object columns to numeric formats, several variables now contain missing values (`NaN`).  \n",
    "These missing entries arise because some cells contained symbols or non-numeric placeholders that could not be parsed during conversion.  \n",
    "Although these values were not visible as missing in the raw dataset, they would have distorted any statistical calculations.  \n",
    "It is therefore preferable to represent them explicitly as missing values.  \n",
    "\n",
    "In practice, datasets rarely have complete coverage across all variables, and part of descriptive analysis is to acknowledge and handle this missingness transparently.  \n",
    "At a later stage, we will decide on an appropriate strategy for dealing with these cases (e.g., retaining, imputing, or excluding variables with extensive missing data)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "777a644a-733c-4007-bc66-a4c777ecf80e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Total rows in dist_df: 400\n",
      "\n",
      "Found 6 columns with non-null count != 400:\n",
      "\n",
      "Columns with missing values:\n",
      "  School graduates from vocational schools 2022 (per 1000 inhabitants): 5 missing values (1.25%)\n",
      "  School graduates from general education schools 2022 - with general or subject-specific higher education entrance qualification (%): 2 missing values (0.50%)\n",
      "  Social insurance contributions as of 30.06.2023 - Agriculture, forestry, fishing (%): 20 missing values (5.00%)\n",
      "  Social insurance contributions as of 30.06.2023 - Manufacturing industry (%): 10 missing values (2.50%)\n",
      "  Social insurance contributions as of 30.06.2023 - Trade, hospitality, transport (%): 2 missing values (0.50%)\n",
      "  Social insurance contributions as of 30.06.2023 - Public and private service providers (%): 8 missing values (2.00%)\n",
      "\n",
      "Summary of columns with missing values (sorted by most missing):\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Column</th>\n",
       "      <th>Non-null Count</th>\n",
       "      <th>Missing Count</th>\n",
       "      <th>Missing Percentage</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Social insurance contributions as of 30.06.202...</td>\n",
       "      <td>380</td>\n",
       "      <td>20</td>\n",
       "      <td>5.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Social insurance contributions as of 30.06.202...</td>\n",
       "      <td>390</td>\n",
       "      <td>10</td>\n",
       "      <td>2.50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Social insurance contributions as of 30.06.202...</td>\n",
       "      <td>392</td>\n",
       "      <td>8</td>\n",
       "      <td>2.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>School graduates from vocational schools 2022 ...</td>\n",
       "      <td>395</td>\n",
       "      <td>5</td>\n",
       "      <td>1.25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>School graduates from general education school...</td>\n",
       "      <td>398</td>\n",
       "      <td>2</td>\n",
       "      <td>0.50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Social insurance contributions as of 30.06.202...</td>\n",
       "      <td>398</td>\n",
       "      <td>2</td>\n",
       "      <td>0.50</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                              Column  Non-null Count  \\\n",
       "2  Social insurance contributions as of 30.06.202...             380   \n",
       "3  Social insurance contributions as of 30.06.202...             390   \n",
       "5  Social insurance contributions as of 30.06.202...             392   \n",
       "0  School graduates from vocational schools 2022 ...             395   \n",
       "1  School graduates from general education school...             398   \n",
       "4  Social insurance contributions as of 30.06.202...             398   \n",
       "\n",
       "   Missing Count  Missing Percentage  \n",
       "2             20                5.00  \n",
       "3             10                2.50  \n",
       "5              8                2.00  \n",
       "0              5                1.25  \n",
       "1              2                0.50  \n",
       "4              2                0.50  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Get the total number of rows in the DataFrame\n",
    "total_rows = len(dist_df)\n",
    "print(f\"Total rows in dist_df: {total_rows}\")\n",
    "\n",
    "# Get count of non-null values for each column\n",
    "non_null_counts = dist_df.count()\n",
    "\n",
    "# Find columns where non-null count is not equal to the total number of rows (400)\n",
    "incomplete_columns = non_null_counts[non_null_counts != total_rows]\n",
    "\n",
    "# Display results\n",
    "print(f\"\\nFound {len(incomplete_columns)} columns with non-null count != {total_rows}:\")\n",
    "print(\"\\nColumns with missing values:\")\n",
    "for col_name, count in incomplete_columns.items():\n",
    "    missing_count = total_rows - count\n",
    "    missing_percent = (missing_count / total_rows) * 100\n",
    "    print(f\"  {col_name}: {missing_count} missing values ({missing_percent:.2f}%)\")\n",
    "\n",
    "# Create a summary DataFrame for better visualization\n",
    "missing_summary = pd.DataFrame({\n",
    "    'Column': incomplete_columns.index,\n",
    "    'Non-null Count': incomplete_columns.values,\n",
    "    'Missing Count': total_rows - incomplete_columns.values,\n",
    "    'Missing Percentage': ((total_rows - incomplete_columns.values) / total_rows * 100).round(2)\n",
    "}).sort_values('Missing Count', ascending=False)\n",
    "\n",
    "print(\"\\nSummary of columns with missing values (sorted by most missing):\")\n",
    "display(missing_summary)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fccafb16-1433-4db3-a46a-36d04abdac16",
   "metadata": {},
   "source": [
    "## 2.3 Standardizing percentage-like variables\n",
    "\n",
    "Several variables in the dataset are recorded as percentages.  \n",
    "However, these values are not always represented on a uniform scale.  \n",
    "\n",
    "To ensure comparability across all districts, it is necessary to bring these variables onto a **consistent 0–100 scale**.  \n",
    "This step prevents distortions in summary statistics and visualizations, and ensures that differences between districts reflect true variation rather than inconsistent data formatting.  \n",
    "\n",
    "By standardizing percentage-like variables, we create a dataset where all proportions can be interpreted consistently as percentages out of 100.  \n",
    "This adjustment prepares the data for accurate descriptive analysis in the next step.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "1707434a-fce9-4c6b-84c3-d0f4169a8670",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Standardization Results:\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Column</th>\n",
       "      <th>Original_Min</th>\n",
       "      <th>Original_Max</th>\n",
       "      <th>Original_Mean</th>\n",
       "      <th>Standardized_Min</th>\n",
       "      <th>Standardized_Max</th>\n",
       "      <th>Standardized_Mean</th>\n",
       "      <th>Conversion_Applied</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Population on 31.12.2022 - Foreigners (%)</td>\n",
       "      <td>3.5</td>\n",
       "      <td>39.0</td>\n",
       "      <td>12.947000</td>\n",
       "      <td>3.5</td>\n",
       "      <td>39.0</td>\n",
       "      <td>12.947000</td>\n",
       "      <td>No conversion needed (already in 0-100 range)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Age on 31.12.2022 - under 16 years (%)</td>\n",
       "      <td>11.5</td>\n",
       "      <td>18.0</td>\n",
       "      <td>14.882250</td>\n",
       "      <td>11.5</td>\n",
       "      <td>18.0</td>\n",
       "      <td>14.882250</td>\n",
       "      <td>No conversion needed (already in 0-100 range)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Age on 31.12.2022 - 16-17 years (%)</td>\n",
       "      <td>1.3</td>\n",
       "      <td>2.3</td>\n",
       "      <td>1.827000</td>\n",
       "      <td>1.3</td>\n",
       "      <td>2.3</td>\n",
       "      <td>1.827000</td>\n",
       "      <td>No conversion needed (already in 0-100 range)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Age on 31.12.2022 - 18-24 years (%)</td>\n",
       "      <td>4.4</td>\n",
       "      <td>13.4</td>\n",
       "      <td>7.124500</td>\n",
       "      <td>4.4</td>\n",
       "      <td>13.4</td>\n",
       "      <td>7.124500</td>\n",
       "      <td>No conversion needed (already in 0-100 range)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Age on 31.12.2022 - 25-34 years (%)</td>\n",
       "      <td>6.5</td>\n",
       "      <td>20.0</td>\n",
       "      <td>11.818250</td>\n",
       "      <td>6.5</td>\n",
       "      <td>20.0</td>\n",
       "      <td>11.818250</td>\n",
       "      <td>No conversion needed (already in 0-100 range)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Age on 31.12.2022 - 35-59 years (%)</td>\n",
       "      <td>29.2</td>\n",
       "      <td>36.8</td>\n",
       "      <td>33.605000</td>\n",
       "      <td>29.2</td>\n",
       "      <td>36.8</td>\n",
       "      <td>33.605000</td>\n",
       "      <td>No conversion needed (already in 0-100 range)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Age on 31.12.2022 - 60-74 years (%)</td>\n",
       "      <td>13.1</td>\n",
       "      <td>26.2</td>\n",
       "      <td>19.445250</td>\n",
       "      <td>13.1</td>\n",
       "      <td>26.2</td>\n",
       "      <td>19.445250</td>\n",
       "      <td>No conversion needed (already in 0-100 range)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Age on 31.12.2022 - 75 years and over (%)</td>\n",
       "      <td>7.7</td>\n",
       "      <td>17.3</td>\n",
       "      <td>11.296250</td>\n",
       "      <td>7.7</td>\n",
       "      <td>17.3</td>\n",
       "      <td>11.296250</td>\n",
       "      <td>No conversion needed (already in 0-100 range)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Land area by type of actual use on 31.12.2021 ...</td>\n",
       "      <td>5.5</td>\n",
       "      <td>75.4</td>\n",
       "      <td>22.132500</td>\n",
       "      <td>5.5</td>\n",
       "      <td>75.4</td>\n",
       "      <td>22.132500</td>\n",
       "      <td>No conversion needed (already in 0-100 range)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Land area by type of actual use on 31.12.2021 ...</td>\n",
       "      <td>24.6</td>\n",
       "      <td>94.5</td>\n",
       "      <td>77.867500</td>\n",
       "      <td>24.6</td>\n",
       "      <td>94.5</td>\n",
       "      <td>77.867500</td>\n",
       "      <td>No conversion needed (already in 0-100 range)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Car stock on 01.01.2023 - Cars with electric o...</td>\n",
       "      <td>3.9</td>\n",
       "      <td>26.5</td>\n",
       "      <td>7.870250</td>\n",
       "      <td>3.9</td>\n",
       "      <td>26.5</td>\n",
       "      <td>7.870250</td>\n",
       "      <td>No conversion needed (already in 0-100 range)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>School graduates from general education school...</td>\n",
       "      <td>2.0</td>\n",
       "      <td>15.2</td>\n",
       "      <td>7.109250</td>\n",
       "      <td>2.0</td>\n",
       "      <td>15.2</td>\n",
       "      <td>7.109250</td>\n",
       "      <td>No conversion needed (already in 0-100 range)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>School graduates from general education school...</td>\n",
       "      <td>5.4</td>\n",
       "      <td>39.7</td>\n",
       "      <td>16.982000</td>\n",
       "      <td>5.4</td>\n",
       "      <td>39.7</td>\n",
       "      <td>16.982000</td>\n",
       "      <td>No conversion needed (already in 0-100 range)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>School graduates from general education school...</td>\n",
       "      <td>13.7</td>\n",
       "      <td>62.4</td>\n",
       "      <td>44.326000</td>\n",
       "      <td>13.7</td>\n",
       "      <td>62.4</td>\n",
       "      <td>44.326000</td>\n",
       "      <td>No conversion needed (already in 0-100 range)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>School graduates from general education school...</td>\n",
       "      <td>9.5</td>\n",
       "      <td>59.8</td>\n",
       "      <td>31.414322</td>\n",
       "      <td>9.5</td>\n",
       "      <td>59.8</td>\n",
       "      <td>31.414322</td>\n",
       "      <td>No conversion needed (already in 0-100 range)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>Social insurance contributions as of 30.06.202...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>10.4</td>\n",
       "      <td>1.154474</td>\n",
       "      <td>0.0</td>\n",
       "      <td>10.4</td>\n",
       "      <td>1.154474</td>\n",
       "      <td>No conversion needed (already in 0-100 range)</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                               Column  Original_Min  \\\n",
       "0           Population on 31.12.2022 - Foreigners (%)           3.5   \n",
       "1              Age on 31.12.2022 - under 16 years (%)          11.5   \n",
       "2                 Age on 31.12.2022 - 16-17 years (%)           1.3   \n",
       "3                 Age on 31.12.2022 - 18-24 years (%)           4.4   \n",
       "4                 Age on 31.12.2022 - 25-34 years (%)           6.5   \n",
       "5                 Age on 31.12.2022 - 35-59 years (%)          29.2   \n",
       "6                 Age on 31.12.2022 - 60-74 years (%)          13.1   \n",
       "7           Age on 31.12.2022 - 75 years and over (%)           7.7   \n",
       "8   Land area by type of actual use on 31.12.2021 ...           5.5   \n",
       "9   Land area by type of actual use on 31.12.2021 ...          24.6   \n",
       "10  Car stock on 01.01.2023 - Cars with electric o...           3.9   \n",
       "11  School graduates from general education school...           2.0   \n",
       "12  School graduates from general education school...           5.4   \n",
       "13  School graduates from general education school...          13.7   \n",
       "14  School graduates from general education school...           9.5   \n",
       "15  Social insurance contributions as of 30.06.202...           0.0   \n",
       "\n",
       "    Original_Max  Original_Mean  Standardized_Min  Standardized_Max  \\\n",
       "0           39.0      12.947000               3.5              39.0   \n",
       "1           18.0      14.882250              11.5              18.0   \n",
       "2            2.3       1.827000               1.3               2.3   \n",
       "3           13.4       7.124500               4.4              13.4   \n",
       "4           20.0      11.818250               6.5              20.0   \n",
       "5           36.8      33.605000              29.2              36.8   \n",
       "6           26.2      19.445250              13.1              26.2   \n",
       "7           17.3      11.296250               7.7              17.3   \n",
       "8           75.4      22.132500               5.5              75.4   \n",
       "9           94.5      77.867500              24.6              94.5   \n",
       "10          26.5       7.870250               3.9              26.5   \n",
       "11          15.2       7.109250               2.0              15.2   \n",
       "12          39.7      16.982000               5.4              39.7   \n",
       "13          62.4      44.326000              13.7              62.4   \n",
       "14          59.8      31.414322               9.5              59.8   \n",
       "15          10.4       1.154474               0.0              10.4   \n",
       "\n",
       "    Standardized_Mean                             Conversion_Applied  \n",
       "0           12.947000  No conversion needed (already in 0-100 range)  \n",
       "1           14.882250  No conversion needed (already in 0-100 range)  \n",
       "2            1.827000  No conversion needed (already in 0-100 range)  \n",
       "3            7.124500  No conversion needed (already in 0-100 range)  \n",
       "4           11.818250  No conversion needed (already in 0-100 range)  \n",
       "5           33.605000  No conversion needed (already in 0-100 range)  \n",
       "6           19.445250  No conversion needed (already in 0-100 range)  \n",
       "7           11.296250  No conversion needed (already in 0-100 range)  \n",
       "8           22.132500  No conversion needed (already in 0-100 range)  \n",
       "9           77.867500  No conversion needed (already in 0-100 range)  \n",
       "10           7.870250  No conversion needed (already in 0-100 range)  \n",
       "11           7.109250  No conversion needed (already in 0-100 range)  \n",
       "12          16.982000  No conversion needed (already in 0-100 range)  \n",
       "13          44.326000  No conversion needed (already in 0-100 range)  \n",
       "14          31.414322  No conversion needed (already in 0-100 range)  \n",
       "15           1.154474  No conversion needed (already in 0-100 range)  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Define the specific columns to process\n",
    "columns_to_process = [7, 11, 12, 13, 14, 15, 16, 17, 18, 19, 25, 30, 31, 32, 33, 39]\n",
    "\n",
    "# Create an empty DataFrame to store standardization statistics\n",
    "stats_df = pd.DataFrame(columns=[\n",
    "    'Column', 'Original_Min', 'Original_Max', 'Original_Mean',\n",
    "    'Standardized_Min', 'Standardized_Max', 'Standardized_Mean', 'Conversion_Applied'\n",
    "])\n",
    "\n",
    "# Process each specified column\n",
    "for col_idx in columns_to_process:\n",
    "    # Get the column name (using dirt_df as the DataFrame)\n",
    "    col = dist_df.columns[col_idx]\n",
    "    \n",
    "    # Get original statistics\n",
    "    orig_min = dist_df[col].min()\n",
    "    orig_max = dist_df[col].max()\n",
    "    orig_mean = dist_df[col].mean()\n",
    "    \n",
    "    # Default conversion message\n",
    "    conversion_applied = \"No conversion needed (already in 0-100 range)\"\n",
    "    \n",
    "    # Check if values are in decimal form (0-1 range)\n",
    "    if orig_max <= 1.0 and orig_min >= 0:\n",
    "        dirt_df[col] = dist_df[col] * 100\n",
    "        conversion_applied = \"Multiplied by 100 (0-1 to 0-100)\"\n",
    "    \n",
    "    # Check if values are in a different range that needs normalization\n",
    "    elif orig_max > 100 or orig_min < 0:\n",
    "        # Normalize to 0-100 scale\n",
    "        min_val = dist_df[col].min()\n",
    "        max_val = dist_df[col].max()\n",
    "        dist_df[col] = ((dist_df[col] - min_val) / (max_val - min_val)) * 100\n",
    "        conversion_applied = f\"Normalized from [{min_val:.2f}-{max_val:.2f}] to [0-100]\"\n",
    "    \n",
    "    # Get new statistics after conversion\n",
    "    new_min = dist_df[col].min()\n",
    "    new_max = dist_df[col].max()\n",
    "    new_mean = dist_df[col].mean()\n",
    "    \n",
    "    # Create a new row as a dictionary\n",
    "    new_row_dict = {\n",
    "        'Column': col,\n",
    "        'Original_Min': orig_min,\n",
    "        'Original_Max': orig_max,\n",
    "        'Original_Mean': orig_mean,\n",
    "        'Standardized_Min': new_min,\n",
    "        'Standardized_Max': new_max,\n",
    "        'Standardized_Mean': new_mean,\n",
    "        'Conversion_Applied': conversion_applied\n",
    "    }\n",
    "    \n",
    "    # Add the new row at a specific index using loc\n",
    "    stats_df.loc[len(stats_df)] = new_row_dict\n",
    "\n",
    "# Display the standardization results\n",
    "print(\"\\nStandardization Results:\")\n",
    "display(stats_df)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a949a908-d64b-4dbf-ac75-f24b4c4b0d38",
   "metadata": {},
   "source": [
    "The diagnostic check for percentage-like variables revealed that no conversion was required — all relevant variables were already consistently expressed on a 0–100 scale.  "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "69645cee-4616-4f28-8b66-06d07a871060",
   "metadata": {},
   "source": [
    "# Step 2 — Data Preparation — Conclusion\n",
    "With this, we have now completed the three core preparation tasks:  \n",
    "1. Restricting the dataset to the 400 valid districts,  \n",
    "2. Converting object columns into proper numeric formats and keeping categorical variables consistent,  \n",
    "3. Checking and, if necessary, standardizing percentage-like variables.  \n",
    "\n",
    "The dataset is therefore cleaned, consistent, and aligned with the assignment requirements.  \n",
    "We are now ready to proceed to **Step 3 — Descriptive Analysis**, where we will explore the structural patterns across German districts.  "
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python [conda env:internetdatabase] *",
   "language": "python",
   "name": "conda-env-internetdatabase-py"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.18"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
